---
import DaisyLightbox from "@components/DaisyLightbox.astro";
import * as MediaUtils from "@lib/MediaUtils";
import * as PathUtils from "@lib/PathUtils";
import { type Entry, type EntryWithTags } from "@lib/Entry";

interface Props {
  entry?: Entry | EntryWithTags;
  mediaSource?: MediaUtils.MediaSources;
  mediaFolder?: string;
  sortByName?: boolean;
}

const { entry, mediaSource, mediaFolder, sortByName = false } = Astro.props;

let media: ImageMetadata[] | undefined;
if (mediaSource && mediaFolder) {
  media = await MediaUtils.loadMedia(mediaSource, mediaFolder);
} else if (entry?.id) {
  const ms = MediaUtils.getMediaSource(entry);
  const mf = PathUtils.getPathFromId(entry.id);
  if (mf.length > 0) {
    media = await MediaUtils.loadMedia(ms, mf);
  }
}

if (sortByName) {
  media?.sort((a, b) =>
    PathUtils.getFileNameFromPath(a.src)
      .toLocaleLowerCase()
      .localeCompare(PathUtils.getFileNameFromPath(b.src).toLocaleLowerCase()),
  );
} else {
  media?.sort(() => Math.random() - 0.5);
}
---

{
  media && (
    <slot name="header">
      <h2 class="mb-0">Media</h2>
    </slot>
  )
}
{
  media && (
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
      {media!.map((m) => (
        <div class="h-40 max-w-full sm:max-w-1/2 md:max-w-1/3 lg:max-w-1/4">
          <DaisyLightbox
            src={m.src}
            alt={PathUtils.getFileNameFromPath(m.src)}
            imgClass="object-cover object-center h-full w-full"
          />
        </div>
      ))}
    </div>
  )
}
