---
import DaisyLightbox from "@components/DaisyLightbox.astro";
import * as MediaUtils from "@lib/MediaUtils";
import * as PathUtils from "@lib/PathUtils";
import { type Entry, type EntryWithTags } from "@lib/Entry";

interface Props {
  headerText?: string;
  entry?: Entry | EntryWithTags;
  customCollection?: string;
  customFolder?: string;
  sortByName?: boolean;
  fileNames?: string[];
}

const {
  headerText,
  entry,
  customCollection,
  customFolder,
  sortByName = false,
  fileNames,
} = Astro.props;

const mediaCaptions = new Map<string, string>(entry?.mediaCaptionsByFilename);

let media: { media: ImageMetadata; caption: string | undefined }[] | undefined;
if (customCollection && customFolder) {
  const ms = MediaUtils.getMediaSource(customCollection);
  if (ms) {
    media = (await MediaUtils.loadMedia(ms, customFolder)).map((m) => ({
      media: m,
      caption:
        mediaCaptions.get(PathUtils.getFileNameFromPath(m.src)) ??
        PathUtils.getFileNameFromPath(m.src),
    }));
  }
} else if (entry?.id && entry?.collection) {
  const ms = MediaUtils.getMediaSource(entry.collection);
  if (ms) {
    const mf = PathUtils.getPathFromId(entry.id);
    if (mf && mf.length > 0) {
      media = (await MediaUtils.loadMedia(ms, mf)).map((m) => ({
        media: m,
        caption:
          mediaCaptions.get(PathUtils.getFileNameFromPath(m.src)) ??
          PathUtils.getFileNameFromPath(m.src),
      }));
    }
  }
}

if (fileNames && media) {
  // TODO: use a Map?
  let fns = fileNames.map((fn) => fn.toLowerCase());
  media = media.filter((m) =>
    fns.includes(PathUtils.getFileNameFromPath(m.media.src).toLowerCase()),
  );
}

if (!fileNames && sortByName) {
  media?.sort((a, b) =>
    PathUtils.getFileNameFromPath(a.media.src)
      .toLocaleLowerCase()
      .localeCompare(
        PathUtils.getFileNameFromPath(b.media.src).toLocaleLowerCase(),
      ),
  );
} else if (!fileNames) {
  media?.sort(() => Math.random() - 0.5);
}
---

{media && headerText && <h2 class="mb-0">{headerText}</h2>}
{
  media && (
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-12 mt-0">
      {media!.map((m) => (
        <div class="h-40 max-w-full sm:max-w-1/2 md:max-w-1/3 lg:max-w-1/4">
          <DaisyLightbox
            src={m.media.src}
            alt={m.caption}
            imgClass="object-cover object-center h-full w-full rounded-xl"
            lightboxImgClass="rounded-xl"
          />
        </div>
      ))}
    </div>
  )
}
