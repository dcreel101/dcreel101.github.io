---
import ModalDialog, { getShowDialogCode } from "@components/ModalDialog.astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";
import * as GalleryUtils from "@lib/GalleryUtils";
import { type Entry, type EntryWithTags } from "@lib/Entry";

interface Props {
  headerText?: string;
  entry?: Entry | EntryWithTags;
  customCollection?: string;
  customFolder?: string;
  sortBy?: GalleryUtils.GallerySortBy;
  fileNames?: string[];
}

const {
  headerText,
  entry,
  customCollection,
  customFolder,
  sortBy = "random",
  fileNames,
} = Astro.props;

let media = await GalleryUtils.loadGalleryMedia(
  entry,
  customCollection,
  customFolder,
  fileNames,
);
if (media) {
  media = GalleryUtils.sortGalleryMedia(media, sortBy, entry, fileNames);
}

const galleryKey = Math.random().toString(16).slice(2);
---

{media && headerText && <h2 class="mb-0">{headerText}</h2>}
{/* gallery preview images */}
{
  media && (
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 mb-12 mt-0">
      {media!.map((m, slideNumber) => (
        <div
          id={`gallery${galleryKey}_trigger${slideNumber}`}
          class="h-40 max-w-full sm:max-w-1/2 md:max-w-1/3 lg:max-w-1/4"
        >
          <Image
            src={m.media}
            alt={m.caption}
            class="h-full w-full object-cover object-center rounded-box cursor-pointer"
          />
        </div>
      ))}
    </div>
  )
}
{/* modal dialog */}
{
  media && (
    <ModalDialog
      id={`gallery${galleryKey}`}
      widthClass="w-[95vw]"
      heightClass="h-[90vh]"
    >
      {/* carousel */}
      <div id={`carousel${galleryKey}`} class="relative size-full">
        {/* carousel wrapper */}
        <div class="relative size-full overflow-hidden rounded-box">
          {/* items */}
          {media.map((m, slideNumber) => (
            <div
              id={`carousel${galleryKey}_item${slideNumber}`}
              class="size-full flex flex-col hidden duration-700 ease-in-out"
            >
              <div class="w-full h-12 mb-2 shrink-0 relative">
                <span class="text-2xl text-bold absolute bottom-0 mb-1">
                  {m.caption}
                </span>
              </div>
              <div class="size-full content-center overflow-auto rounded-box">
                <Image
                  src={m.media}
                  alt={m.caption}
                  class="m-0 w-full h-auto rounded-box"
                />
              </div>
            </div>
          ))}
        </div>
        {/* indicators */}
        <div class="absolute z-30 flex -translate-x-1/2 space-x-3 rtl:space-x-reverse bottom-6 left-1/2">
          {media.map((m, slideNumber) => (
            <button
              id={`carousel${galleryKey}_ind${slideNumber}`}
              type="button"
              class="w-4 h-4 rounded-box"
              aria-current={slideNumber == 0}
              aria-label={`Slide ${slideNumber + 1}`}
              data-carousel-slide-to={slideNumber}
            />
          ))}
        </div>
        {/* controls */}
        <button
          id={`carousel${galleryKey}_prev`}
          type="button"
          class="absolute top-14 bottom-0 left-0 z-30 flex items-center justify-center px-4 cursor-pointer focus:outline-none hover:glass rounded-l-box"
          data-carousel-prev
        >
          <Icon name="carousel_prev" class="w-12 h-12 text-base-content" />
        </button>
        <button
          id={`carousel${galleryKey}_next`}
          type="button"
          class="absolute top-14 bottom-0 right-0 z-30 flex items-center justify-center px-4 cursor-pointer focus:outline-none hover:glass rounded-r-box"
          data-carousel-next
        >
          <Icon name="carousel_next" class="w-12 h-12 text-base-content" />
        </button>
      </div>
    </ModalDialog>
  )
}
{/* initialization */}
{
  media && (
    <script
      is:inline
      type="module"
      define:vars={{ galleryKey, itemCount: media.length }}
    >
      import initLightboxGallery from "/src/lib/initLightboxGallery";
      initLightboxGallery(galleryKey, itemCount);
    </script>
  )
}
